{"version":3,"sources":["page/Body.js","App.js","serviceWorker.js","index.js"],"names":["Body","props","state","dataKaryawan","valueSearch","inputId","inputNama","inputJabatan","inputJK","inputDob","panggilSemua","bind","handleSearch","handleDelete","closeModal","handleInput","clearInput","handleSave","handleEdit","e","this","setState","target","value","id","fetch","method","then","response","alert","body","JSON","stringify","nama_karyawan","jabatan","jenis_kelamin","tanggal_lahir","headers","json","hasil","setModalShow","console","log","Container","Row","style","marginTop","Col","lg","Form","Control","type","placeholder","onChange","Button","variant","onClick","reverse","map","item","i","Card","key","width","marginLeft","Img","src","linkgambar","Title","Text","Footer","marginRight","Component","App","React","useState","modalShow","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5379049e.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Container, Row, Col, Form, Button, Card} from 'react-bootstrap';\n\nclass Body extends Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tdataKaryawan : [],\n\t\t\tvalueSearch: '',\n\t\t\tinputId : '',\n\t\t\tinputNama : '',\n\t\t\tinputJabatan : '',\n\t\t\tinputJK : '',\n\t\t\tinputDob : ''\n\t\t}\n\n\t\tthis.panggilSemua = this.panggilSemua.bind(this)\n\t\tthis.handleSearch = this.handleSearch.bind(this)\n\t\tthis.handleDelete = this.handleDelete.bind(this)\n\t\tthis.closeModal = this.closeModal.bind(this)\n\t\tthis.handleInput = this.handleInput.bind(this)\n\t\tthis.clearInput = this.clearInput.bind(this)\n\t\tthis.handleSave = this.handleSave.bind(this)\n\t\tthis.handleEdit = this.handleEdit.bind(this)\n\t}\n\n\thandleSearch(e){\n\t\tthis.setState({valueSearch: e.target.value})\n\t}\n\n\thandleDelete(id){\n\t\tfetch(`http://localhost:3000/data-karyawan/${id}`, {\n\t\t\tmethod: 'DELETE'\n\t\t}).then(response => {\n\t\t\talert('data sudah terhapus')\n\t\t\tthis.panggilSemua()\n\t\t})\n\t}\n\n\thandleSave(){\n\t\tif(this.state.inputNama === \"\" || this.state.inputJabatan === \"\" || this.state.inputJK === \"\" || this.state.inputDob === \"\"){\n\t\t\talert('Silahkan isi data terlebih dahulu')\n\t\t}else if(this.state.inputId === \"\"){\n\t\t\tfetch('http://localhost:3000/data-karyawan',{\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody : JSON.stringify({\n\t\t\t\t\tnama_karyawan : this.state.inputNama,\n\t\t\t\t\tjabatan : this.state.inputJabatan,\n\t\t\t\t\tjenis_kelamin : this.state.inputJK,\n\t\t\t\t\ttanggal_lahir : this.state.inputDob,\n\t\t\t\t}), headers: {\n\t\t\t\t\t'Content-type': 'application/json; charset=UTF-8',\n\t\t\t\t},\n\t\t\t}).then ((response) => response.json())\n\t\t\t  .then((hasil) => {\n\t\t\t  \talert(\"Data Berhasil Tersimpan\")\n\t\t\t  \tthis.closeModal()\n\t\t\t\tthis.panggilSemua()\n\t\t\t  })\n\t\t}else{\n\t\t\tfetch(`http://localhost:3000/data-karyawan/${this.state.inputId}`,{\n\t\t\t\tmethod : 'PUT',\n\t\t\t\tbody : JSON.stringify({\n\t\t\t\t\tnama_karyawan : this.state.inputNama,\n\t\t\t\t\tjabatan : this.state.inputJabatan,\n\t\t\t\t\tjenis_kelamin : this.state.inputJK,\n\t\t\t\t\ttanggal_lahir : this.state.inputDob,\n\t\t\t\t}), headers : {\n\t\t\t\t\t'Content-type': 'application/json; charset=UTF-8',\n\t\t\t\t},\n\t\t\t}).then((response) => response.json())\n\t\t\t  .then((hasil) => {\n\t\t\t  \tthis.panggilSemua()\n\t\t\t  \tthis.props.setModalShow()\n\t\t\t  \tthis.clearInput()\n\t\t\t  })\n\t\t}\n\t}\n\n\thandleEdit(id){\n\t\tfetch(`http://localhost:3000/data-karyawan/${id}`\n\t\t).then((response) => response.json())\n\t\t .then((hasil) => {\n\t\t  \t\tconsole.log(hasil)\n\t\t  \t\tthis.setState({\n\t\t  \t\t\tinputNama : hasil.nama_karyawan,\n\t\t  \t\t\tinputJabatan : hasil.jabatan,\n\t\t  \t\t\tinputJK : hasil.jenis_kelamin,\n\t\t  \t\t\tinputDob : hasil.tanggal_lahir,\n\t\t  \t\t\tinputId : hasil.id\n\t\t  \t\t})\n\t\t  \t})\n\t}\n\n\thandleInput(value,e){\n\t\tthis.setState({[value] : e.target.value})\n\t}\t\n\n\tpanggilSemua(){\n\t\tfetch('http://localhost:3000/data-karyawan')\n\t\t\t.then((response) => response.json())\n\t\t\t.then((hasil) => this.setState({dataKaryawan : hasil}))\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.panggilSemua()\n\t}\n\n\tcloseModal(){\n\t\tthis.props.setModalShow(false)\n\t\tthis.clearInput()\n\t}\n\n\tclearInput(){\n\t\tthis.setState({inputNama: \"\", inputJabatan: \"\", inputJK:\"\", inputDob : \"\", inputId : \"\"})\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<Row style={{marginTop:'30px'}}>\n\t\t\t\t\t<Col lg={3}>\n\t\t\t\t\t\t<Form.Control type=\"text\" value={this.state.inputId} placeholder=\"Masukkan ID\" onChange = {(e) => this.handleInput(\"inputId\",e)}/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col lg={3}>\n\t\t\t\t\t\t<Form.Control type=\"text\" value={this.state.inputNama} placeholder=\"Masukkan Nama Karyawan\" onChange = {(e) => this.handleInput(\"inputNama\",e)}/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col lg={3}>\n\t\t\t\t\t\t<Form.Control type=\"text\" value={this.state.inputJabatan} placeholder=\"Masukkan Jabatan\" onChange = {(e) => this.handleInput(\"inputJabatan\",e)}/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col lg={3}>\n\t\t\t\t\t\t<Form.Control type=\"text\" value={this.state.inputJK} placeholder=\"Masukkan Jenis Kelamin\" onChange = {(e) => this.handleInput(\"inputJK\",e)}/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col lg={3}>\n\t\t\t\t\t\t<Form.Control type=\"date\" value={this.state.inputDob} placeholder=\"mm/dd/yy\" onChange = {(e) => this.handleInput(\"inputDob\",e)}/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col lg={2}>\n\t\t\t\t\t\t<Button variant=\"primary\" onClick={(e)=>this.handleSave(e)}>Tambah Data</Button>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t{this.state.dataKaryawan.reverse().map((item,i) => {\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<Card key={i} style={{width:'300px', marginTop: '30px', marginLeft: '20px'}}>\n\t\t\t\t\t\t\t\t\t<Card.Img variant=\"top\" src={item.linkgambar}/>\n\t\t\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t\t<Card.Title>Nama : {item.nama_karyawan}</Card.Title>\n\t\t\t\t\t\t\t\t\t\t<Card.Text>Jabatan : {item.jabatan}</Card.Text>\n\t\t\t\t\t\t\t\t\t\t<Card.Text>Jenis Kelamin : {item.jenis_kelamin}</Card.Text>\n\t\t\t\t\t\t\t\t\t\t<Card.Text>Tanggal Lahir : {item.tanggal_lahir}</Card.Text>\n\t\t\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t\t\t<Card.Footer>\n\t\t\t\t\t\t\t\t\t\t<Button style={{marginRight: '5%'}} variant=\"outline-danger\" onClick={()=>this.handleDelete(item.id)}>Hapus</Button>\n\t\t\t\t\t\t\t\t\t\t<Button variant=\"outline-primary\" onClick={()=> this.handleEdit(item.id)}>Edit</Button>\n\t\t\t\t\t\t\t\t\t</Card.Footer>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t)\n\t}\n}\n\nexport default Body;","import React from 'react';\nimport './css/bootstrap.min.css';\nimport Body from './page/Body.js';\n\nfunction App() {\n  const [modalShow, setModalShow] = React.useState(false)\n\n  return (\n    <div>\n      <Body modalShow={modalShow} setModalShow={setModalShow}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}